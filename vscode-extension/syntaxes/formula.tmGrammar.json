{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Formula Language",
  "scopeName": "source.formula",
  "fileTypes": [
    "formula"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.formula",
          "match": "//.*$"
        },
        {
          "name": "comment.block.formula",
          "begin": "/\\*",
          "end": "\\*/",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.formula"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.formula"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.formula",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.formula"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.formula"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.formula",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.formula",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "keyword.function.formula",
          "match": "\\b(ROUND|ABS|CEIL|CEILING|FLOOR|POWER|SQRT|LOG|LOG10|EXP|SIN|COS|TAN|RANDOM|MIN|MAX|MOD|SIGN|LENGTH|LEN|UPPER|LOWER|TRIM|LEFT|RIGHT|MID|SUBSTR|CONCAT|REPLACE|SUBSTITUTE|CONTAINS|STARTS_WITH|ENDS_WITH|NOW|TODAY|YEAR|MONTH|DAY|HOUR|MINUTE|SECOND|WEEKDAY|ADDMONTHS|ADDDAYS|DATEDIF|DATE_ADD|DATE_DIFF|FORMAT_DATE|IF|AND|OR|NOT|ISNULL|ISBLANK|NULLVALUE|COALESCE|COUNT|SUM|AVG|MIN_AGG|MAX_AGG|STRING_AGG|STRING_AGG_DISTINCT|SUM_AGG|COUNT_AGG|AVG_AGG|AND_AGG|OR_AGG|ME|STRING|DATE|EVAL)\\b",
          "captures": {
            "1": {
              "name": "entity.name.function.formula"
            }
          }
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.language.boolean.formula",
          "match": "\\b(TRUE|FALSE|NULL)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.formula",
          "match": "[+\\-*/]"
        },
        {
          "name": "keyword.operator.comparison.formula",
          "match": "(>=|<=|!=|<>|>|<|=)"
        },
        {
          "name": "keyword.operator.string.formula",
          "match": "&"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.definition.parameters.begin.formula",
          "match": "\\("
        },
        {
          "name": "punctuation.definition.parameters.end.formula",
          "match": "\\)"
        },
        {
          "name": "punctuation.separator.parameters.formula",
          "match": ","
        },
        {
          "name": "punctuation.accessor.formula",
          "match": "\\."
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.formula",
          "match": "\\b[a-zA-Z_]\\w*\\b"
        }
      ]
    }
  }
}